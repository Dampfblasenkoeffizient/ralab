$date
  Sat May 24 09:30:14 2025
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module constant_package $end
$upscope $end
$scope module types $end
$upscope $end
$scope module register_file_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var reg 5 # readaddr1[4:0] $end
$var reg 5 $ readaddr2[4:0] $end
$var reg 5 % writeaddr[4:0] $end
$var reg 32 & writedata[31:0] $end
$var reg 1 ' writeenable $end
$var reg 32 ( readdata1[31:0] $end
$var reg 32 ) readdata2[31:0] $end
$comment regdump is not handled $end
$scope module uut $end
$var reg 1 * pi_clk $end
$var reg 1 + pi_rst $end
$var reg 1 , pi_writeenable $end
$var reg 32 - pi_writeregdata[31:0] $end
$var reg 5 . pi_readregaddr1[4:0] $end
$var reg 5 / pi_readregaddr2[4:0] $end
$var reg 5 0 pi_writeregaddr[4:0] $end
$var reg 32 1 po_readregdata1[31:0] $end
$var reg 32 2 po_readregdata2[31:0] $end
$comment po_registerout is not handled $end
$comment s_registers is not handled $end
$var reg 32 3 s_read1[31:0] $end
$var reg 32 4 s_read2[31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
1"
b00000 #
b00000 $
b00000 %
b00000000000000000000000000000000 &
0'
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
0*
1+
0,
b00000000000000000000000000000000 -
b00000 .
b00000 /
b00000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
#10000000
0"
0+
#20000000
b00001 #
b00001 %
b11011110101011011011111011101111 &
1'
1,
b11011110101011011011111011101111 -
b00001 .
b00001 0
#25000000
1!
1*
#30000000
0!
0'
0*
0,
#35000000
1!
b11011110101011011011111011101111 (
1*
b11011110101011011011111011101111 1
b11011110101011011011111011101111 3
#40000000
